$width: 18em;
$r-wheel: math.div($width, 2); // rayon roue
$w-wheel: 1.5em; // Ã©paisseur roue
$r-sample: 0.5em; // rayon 

.wheel,
.color {
    @include grid-center;
}

.wheel {
    padding: $r-wheel;
    grid-area: 1/1;
    position: relative;
    border-radius: 50%;
    background-image: conic-gradient(from 90deg, steps(8));
    mask-image: radial-gradient(closest-side, #0000 #{$r-wheel - $w-wheel}, #000 calc(#{$r-wheel - $w-wheel} + 1px));
}

.color {
    @include size(($r-wheel - $w-wheel) * math.sqrt(2));
    position: relative;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    grid-area: 1/1;
    background: hsl(var(--hue-rotation), 100%, 50%);

    &::after {
        position: absolute;
        content: "";
        inset: 0;
        background-image: linear-gradient(90deg, #ffff, #fff0),
            linear-gradient(#0000, #000f);
        background-blend-mode: hue;
    }
}

.sample {
    padding: $r-sample;
    border: 2px solid #fff;
    border-radius: 50%;
    z-index: 10;
    box-shadow: 0px 0px 4px rgba(0,0,0,.75);
    $d: $r-wheel - math.div($w-wheel, 2) + math.div($r-sample, 2);
    transform-origin: -#{$d - $r-sample} 0.5em;
    transform: translateX($d) rotate(var(--hue-rotation));
}


#canvas {
    @include size(($r-wheel - $w-wheel) * math.sqrt(2));
    grid-area: 1/1;
    place-self: center;
    background-color: hsl(var(--hue-rotation), 100%, 50%);
    z-index: 10;

    &:hover {
        cursor: crosshair;
    }
}

.sample-color {
    @include size($width, math.div($width, 2));
    position: relative;
    grid-area: 2/1;
    background-color: var(--color-sample);
    border: 1px solid #fff8;

    &::after {
        content: attr(data-color-sample);
        position: absolute;
        bottom: 0;
        left: 0;
        padding: .4em .8em;
        font-family: sans-serif;
        font-weight: 400;
        color: #fffb;
        border-top-right-radius: .25em;
        background-color: rgba(0, 0, 0, .75);
    }
}