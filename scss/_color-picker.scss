$width: 18em;
$r-wheel: math.div($width, 2); // rayon roue
$w-wheel: 1.5em; // épaisseur roue
$r-sample: 0.5em; // rayon 

#color-picker {
    width: $width * 2;
    display: grid;
    grid-template-columns: 1fr 1fr;

    &>* {
        @include grid-center;
        width: $width;
    }
}

.wheel,
#canvas {
    touch-action: none;
}

#wheel__container {
    grid-area: 1/1;
}

#color__container {
    grid-area: 1/2;
    position: relative;

    &>* {
        grid-area: 1/1;
    }

    button {
        position: absolute;
        bottom: 0;
        right: 0;
    }
}

.wheel {
    padding: $r-wheel;
    grid-area: 1/1;
    position: relative;
    border-radius: 50%;
    background-image: conic-gradient(from 90deg, steps(8));
    mask-image: radial-gradient(closest-side, #0000 calc(#{$r-wheel - $w-wheel} - 1px), #000 #{$r-wheel - $w-wheel});
}

.sample {
    $bdr: 2px;
    touch-action: none;
    padding: $r-sample;
    border: $bdr solid #fff;
    border-radius: 50%;
    z-index: 10;
    box-shadow: 0px 0px 4px rgba(0, 0, 0, .75);
    $d: $r-wheel - math.div($w-wheel, 2) + math.div($r-sample, 2);
    transform-origin: calc(#{$r-sample - $d} + #{$bdr}) calc(#{$r-sample} + #{$bdr});
    transform: translateX($d) rotate(var(--hue-rotation));

    &:hover {
        cursor: pointer;
    }
}


#canvas {
    @include size(($r-wheel - $w-wheel) * math.sqrt(2));
    grid-area: 1/1;
    place-self: center;
    background-color: hsl(var(--hue-rotation), 100%, 50%);
    z-index: 10;

    &:hover {
        cursor: crosshair;
    }
}

.picked-color {
    @include size(($r-wheel - $w-wheel) * math.sqrt(2));
    position: relative;
    grid-area: 1/2;
    background-color: var(--color-picked);
    border: 1px solid #fff8;

    &::after {
        content: attr(data-color-picked);
        @include grid-center;
        position: absolute;
        bottom: 0;
        left: 0;
        padding: .4em .8em;
        border-top-right-radius: .25em;
        background-color: rgba(0, 0, 0, .75);
    }
}

.info{
    font-family: sans-serif;
    font-weight: 400;
    color: #fffb;
}
/* ------------------- Color swatches -- */

#swatches {
    position: relative;
    width: 80vw;
    @include grid-center;
    grid-template-columns: repeat(auto-fill, var(--swatch-size));
    gap: .8em;
    padding-bottom: 3em;
    overflow: hidden;
}

.swatch {
    height: var(--swatch-size);
    border-top-left-radius: 2em;
    border-bottom-right-radius: 2em;
    position: relative;
    overflow: hidden;
    transform: scale(1);
    transition: transform .5s cubic-bezier(0.5, -0.5, 0.75, 1.5);

    &::after {
        position: absolute;
        content: attr(data-bg-color);
        width: 100%;
        height: 2em;
        bottom: 0;
        left: 0;
        @include grid-center;
        border-top-left-radius: 2em;
        font-size: .8em;
        background-color: rgba(0, 0, 0, .5);
        z-index: 1;
        opacity: 0;
        transform: translateX(100%);
        transition: transform .25s ease-in-out,
                    opacity .25s linear;
    }

    &.cleared {
        transform: scale(0);
    }

    &:hover:not(.over)::after {
        transform: translateX(0);
        opacity: 1;
    }

    &.over {
        // Drop zone
        border: 4px dashed #444;
        background-color: #777 !important;
        box-sizing: border-box;

        &::before {
            position: absolute;
            inset: 0;
            content: 'Drop Me!';
            @include grid-center;
            font-family: sans-serif;
            font-weight: 600;
            font-size: 1.5em;
            color: #fff4;
        }

        & .btns {
            display: none;
        }
    }

    .btns {
        position: absolute;
        right: 0;
        top: 0;
        width: 26px;
        height: 52px;
        display: grid;
        justify-content: center;
        align-content: space-around;
        background-color: rgba(0, 0, 0, .5);
        border-bottom-left-radius: .25em;

        & button {
            width: 18px;
            height: 18px;
            appearance: none;
            border: 0;
            background-color: transparent;

            & svg {
                fill: hotpink;
                width: 18px;
                height: 18px;

                &:hover {
                    fill: deepskyblue;
                }

                &:active {
                    // important ! le svg ne doit pas capter les clics, ça simplifie bcq la gestion des boutons
                    pointer-events: none;
                }
            }
        }
    }
}

.copyList {
    grid-column: 1/-1;
    background-color: deepskyblue;
    height: auto;
    display: none;

    & button{
        margin-left: auto;
    }
}

.swatch~.copyList {
    // visible only if there is at least a .swatch
    display: block;
}

.notif{
    $h: 3em;
    min-width: 15vw;
    height: $h;
    position: fixed;
    bottom: 0;
    left: 50%;
    @include grid-center;
    transform: translateX(-50%)  translateY($h);
    transition-property: transform;
    transition-duration: .125s;
    transition-delay: 3s;
    transition-timing-function: ease-in-out;
    background-color: rgba(0,0,0,.5);
    border-top-left-radius: .25em;
    border-top-right-radius: .25em;
    padding: 0 2.5em;
    
    &.visible{
        transform: translateX(-50%) translateY(0);
        transition-duration: .5s;
        transition-delay: 0s;
    }
}

.hidden {
    // hidden input used by (copy) toClipboard() function 
    position: absolute;
    left: -100vw;
}